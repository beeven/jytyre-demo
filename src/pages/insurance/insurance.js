"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../utils/util");
const app = getApp();
Page({
    data: {
        items: [
            { "insuranceID": "11111", plate: "粤A DE077", dateCreated: "2019-07-03" },
            { "insuranceID": "2222", plate: "粤A DE078", dateCreated: "2019-07-03" }
        ]
    },
    async onLoad() {
        let items = await loadInsuranceList();
        console.log(items);
        console.log(util_1.formatTime(new Date()).substr(0, 10));
        this.setData({
            items: items
        });
        for (let i = 0; i < 3; i++) {
            await saveSampleInsurance();
        }
    },
});
async function loadInsuranceList() {
    const db = wx.cloud.database();
    let items = await db.collection("insurance").where({
        _openid: app.globalData.openid
    }).get();
    let ret = [];
    items.data.forEach(item => {
        ret.push({
            insuranceID: item._id.toString(),
            plate: item["plate"],
            dateCreated: (new Date()).toString()
        });
    });
    return ret;
}
async function saveSampleInsurance() {
    const db = wx.cloud.database();
    let ret = await db.collection("insurance").add({
        data: {
            plate: "粤A DE" + Math.round((Math.random() * 1000)).toString().padStart(3, '0'),
            dateCreated: (new Date())
        }
    });
    return ret._id;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdXJhbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5zdXJhbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsMkNBQThDO0FBRTlDLE1BQU0sR0FBRyxHQUFHLE1BQU0sRUFBVSxDQUFDO0FBWTdCLElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLEtBQUssRUFBRTtZQUNILEVBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsVUFBVSxFQUFFLFdBQVcsRUFBQyxZQUFZLEVBQUM7WUFDcEUsRUFBQyxhQUFhLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxVQUFVLEVBQUUsV0FBVyxFQUFDLFlBQVksRUFBQztTQUN0RTtLQUNpQjtJQUN0QixLQUFLLENBQUMsTUFBTTtRQUNSLElBQUksS0FBSyxHQUFHLE1BQU0saUJBQWlCLEVBQUUsQ0FBQztRQUN0QyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQVUsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxLQUFLLEVBQUUsS0FBSztTQUNmLENBQUMsQ0FBQTtRQUVGLEtBQUksSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUU7WUFDakIsTUFBTSxtQkFBbUIsRUFBRSxDQUFDO1NBQy9CO0lBRUwsQ0FBQztDQUdKLENBQUMsQ0FBQTtBQUlGLEtBQUssVUFBVSxpQkFBaUI7SUFDNUIsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMvQixJQUFJLEtBQUssR0FBRyxNQUFNLEVBQUUsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQy9DLE9BQU8sRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU07S0FDakMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ1QsSUFBSSxHQUFHLEdBQXdCLEVBQUUsQ0FBQztJQUNsQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUN0QixHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ0wsV0FBVyxFQUFFLElBQUksQ0FBQyxHQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pDLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ3BCLFdBQVcsRUFBRSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQUU7U0FDdkMsQ0FBQyxDQUFBO0lBQ04sQ0FBQyxDQUFDLENBQUM7SUFDSCxPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUM7QUFFRCxLQUFLLFVBQVUsbUJBQW1CO0lBQzlCLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDL0IsSUFBSSxHQUFHLEdBQUcsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUcsQ0FBQztRQUMzQyxJQUFJLEVBQUU7WUFDRixLQUFLLEVBQUUsT0FBTyxHQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFDLEdBQUcsQ0FBQztZQUM3RSxXQUFXLEVBQUUsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO1NBQzVCO0tBQ0osQ0FBQyxDQUFDO0lBQ0gsT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDO0FBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTXlBcHAgfSBmcm9tIFwiLi4vLi4vYXBwXCI7XHJcbmltcG9ydCB7IGZvcm1hdFRpbWUgfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcclxuXHJcbmNvbnN0IGFwcCA9IGdldEFwcDxJTXlBcHA+KCk7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEluc3VyYW5jZUxpc3RJdGVtIHtcclxuICAgIGluc3VyYW5jZUlEOiBzdHJpbmc7XHJcbiAgICBwbGF0ZTogc3RyaW5nO1xyXG4gICAgZGF0ZUNyZWF0ZWQ6IHN0cmluZ1xyXG59XHJcblxyXG5pbnRlcmZhY2UgSW5zdXJhbmNlUGFnZURhdGEge1xyXG4gICAgaXRlbXM6IEluc3VyYW5jZUxpc3RJdGVtW11cclxufVxyXG5cclxuUGFnZSh7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgaXRlbXM6IFtcclxuICAgICAgICAgICAge1wiaW5zdXJhbmNlSURcIjogXCIxMTExMVwiLCBwbGF0ZTpcIueypEEgREUwNzdcIiwgZGF0ZUNyZWF0ZWQ6XCIyMDE5LTA3LTAzXCJ9LFxyXG4gICAgICAgICAgICB7XCJpbnN1cmFuY2VJRFwiOiBcIjIyMjJcIiwgcGxhdGU6XCLnsqRBIERFMDc4XCIsIGRhdGVDcmVhdGVkOlwiMjAxOS0wNy0wM1wifVxyXG4gICAgICAgIF1cclxuICAgIH0gYXMgSW5zdXJhbmNlUGFnZURhdGEsXHJcbiAgICBhc3luYyBvbkxvYWQoKSB7XHJcbiAgICAgICAgbGV0IGl0ZW1zID0gYXdhaXQgbG9hZEluc3VyYW5jZUxpc3QoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhpdGVtcyk7XHJcbiAgICAgICAgY29uc29sZS5sb2coZm9ybWF0VGltZShuZXcgRGF0ZSgpKS5zdWJzdHIoMCwxMCkpO1xyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgIGl0ZW1zOiBpdGVtc1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGZvcihsZXQgaT0wO2k8MztpKyspIHtcclxuICAgICAgICAgICAgYXdhaXQgc2F2ZVNhbXBsZUluc3VyYW5jZSgpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9LFxyXG5cclxuXHJcbn0pXHJcblxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGxvYWRJbnN1cmFuY2VMaXN0KCl7XHJcbiAgICBjb25zdCBkYiA9IHd4LmNsb3VkLmRhdGFiYXNlKCk7XHJcbiAgICBsZXQgaXRlbXMgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiaW5zdXJhbmNlXCIpLndoZXJlKHtcclxuICAgICAgICBfb3BlbmlkOiBhcHAuZ2xvYmFsRGF0YS5vcGVuaWRcclxuICAgIH0pLmdldCgpO1xyXG4gICAgbGV0IHJldDogSW5zdXJhbmNlTGlzdEl0ZW1bXSA9IFtdO1xyXG4gICAgaXRlbXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgIHJldC5wdXNoKHtcclxuICAgICAgICAgICAgaW5zdXJhbmNlSUQ6IGl0ZW0uX2lkIS50b1N0cmluZygpLFxyXG4gICAgICAgICAgICBwbGF0ZTogaXRlbVtcInBsYXRlXCJdLFxyXG4gICAgICAgICAgICBkYXRlQ3JlYXRlZDogKG5ldyBEYXRlKCkpLnRvU3RyaW5nKClcclxuICAgICAgICB9KVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcmV0O1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBzYXZlU2FtcGxlSW5zdXJhbmNlKCl7XHJcbiAgICBjb25zdCBkYiA9IHd4LmNsb3VkLmRhdGFiYXNlKCk7XHJcbiAgICBsZXQgcmV0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcImluc3VyYW5jZVwiKS5hZGQoe1xyXG4gICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgcGxhdGU6IFwi57KkQSBERVwiKyBNYXRoLnJvdW5kKChNYXRoLnJhbmRvbSgpICogMTAwMCkpLnRvU3RyaW5nKCkucGFkU3RhcnQoMywnMCcpLFxyXG4gICAgICAgICAgICBkYXRlQ3JlYXRlZDogKG5ldyBEYXRlKCkpIFxyXG4gICAgICAgIH0gXHJcbiAgICB9KTtcclxuICAgIHJldHVybiByZXQuX2lkO1xyXG59Il19