"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const moment = require("moment-mini-ts");
const warranty_service_1 = require("./warranty.service");
const app = getApp();
Page({
    data: {
        loading: true,
        items: []
    },
    async onLoad() {
        await app.ensureLogin();
        wx.showToast({
            title: '数据加载中',
            icon: 'loading',
            duration: 10000
        });
        await warranty_service_1.warrantyService.samplingDatabase();
        let warrantyItems = await warranty_service_1.warrantyService.loadWarrantyItems();
        let viewItems = [];
        warrantyItems.forEach(item => {
            viewItems.push({
                id: item._id,
                plate: item.plate,
                thumbnail: item.thumbnail,
                description: `质保期限： ${moment(item.endDate).format("YYYY-MM-DD")}`,
                approvalStatus: item.approvalStatus
            });
        });
        console.log(warrantyItems);
        wx.hideToast();
        this.setData({
            items: viewItems,
            loading: false
        });
    },
    onShow() {
        console.log(this.route);
    },
    onItemClicked(e) {
        console.log(e);
        let itemId = e.currentTarget.dataset["itemId"];
        wx.navigateTo({
            url: "./detail/detail?id=" + itemId,
        });
    },
    addNew() {
        wx.navigateTo({
            url: './add/add?id=1'
        });
    },
    async onItemRemoved(id) {
        let items = this.data.items;
        let i = items.findIndex(x => x.id == id);
        items.splice(i, 1);
        this.setData({
            items: items
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FycmFudHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3YXJyYW50eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHlDQUF5QztBQUN6Qyx5REFBcUU7QUFFckUsTUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFVLENBQUM7QUF1QjdCLElBQUksQ0FBaUM7SUFDakMsSUFBSSxFQUFFO1FBQ0YsT0FBTyxFQUFFLElBQUk7UUFDYixLQUFLLEVBQUUsRUFDTjtLQUNnQjtJQUNyQixLQUFLLENBQUMsTUFBTTtRQUNSLE1BQU0sR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3hCLEVBQUUsQ0FBQyxTQUFTLENBQUM7WUFDVCxLQUFLLEVBQUUsT0FBTztZQUNkLElBQUksRUFBRSxTQUFTO1lBQ2YsUUFBUSxFQUFFLEtBQUs7U0FDbEIsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxrQ0FBZSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDekMsSUFBSSxhQUFhLEdBQUcsTUFBTSxrQ0FBZSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFFOUQsSUFBSSxTQUFTLEdBQXVCLEVBQUUsQ0FBQztRQUN2QyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3pCLFNBQVMsQ0FBQyxJQUFJLENBQUM7Z0JBQ1gsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO2dCQUN6QixXQUFXLEVBQUUsU0FBUyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDakUsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2FBQ3RDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFBO1FBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUzQixFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsS0FBSyxFQUFFLFNBQVM7WUFDaEIsT0FBTyxFQUFFLEtBQUs7U0FDakIsQ0FBQyxDQUFBO0lBRU4sQ0FBQztJQUVELE1BQU07UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsYUFBYSxDQUFDLENBQWM7UUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNmLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9DLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUUscUJBQXFCLEdBQUcsTUFBTTtTQUN0QyxDQUFDLENBQUE7SUFDTixDQUFDO0lBSUQsTUFBTTtRQUNGLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUUsZ0JBQWdCO1NBQ3hCLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFHRCxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQVU7UUFDMUIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDNUIsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDekMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULEtBQUssRUFBRSxLQUFLO1NBQ2YsQ0FBQyxDQUFDO0lBRVAsQ0FBQztDQUVKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElNeUFwcCB9IGZyb20gXCIuLi8uLi9hcHBcIjtcclxuaW1wb3J0ICogYXMgbW9tZW50IGZyb20gXCJtb21lbnQtbWluaS10c1wiO1xyXG5pbXBvcnQgeyB3YXJyYW50eVNlcnZpY2UsIEFwcHJvdmFsU3RhdHVzIH0gZnJvbSAnLi93YXJyYW50eS5zZXJ2aWNlJztcclxuXHJcbmNvbnN0IGFwcCA9IGdldEFwcDxJTXlBcHA+KCk7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgV2FycmFudHlMaXN0SXRlbSB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgcGxhdGU6IHN0cmluZztcclxuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgICB0aHVtYm5haWw6IHN0cmluZztcclxuICAgIGFwcHJvdmFsU3RhdHVzOiBBcHByb3ZhbFN0YXR1cztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBXYXJyYW50eVBhZ2VEYXRhIHtcclxuICAgIGl0ZW1zOiBXYXJyYW50eUxpc3RJdGVtW10sXHJcbiAgICBsb2FkaW5nOiBib29sZWFuXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgV2FycmFudHlQYWdlIHtcclxuICAgIG9uSXRlbUNsaWNrZWQoZTogYW55KTogdm9pZDtcclxuICAgIGFkZE5ldygpOiB2b2lkO1xyXG4gICAgb25JdGVtUmVtb3ZlZChpZDogc3RyaW5nKTogdm9pZDtcclxufVxyXG5cclxuUGFnZTxXYXJyYW50eVBhZ2VEYXRhLCBXYXJyYW50eVBhZ2U+KHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgICBsb2FkaW5nOiB0cnVlLFxyXG4gICAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAgXVxyXG4gICAgfSBhcyBXYXJyYW50eVBhZ2VEYXRhLFxyXG4gICAgYXN5bmMgb25Mb2FkKCkge1xyXG4gICAgICAgIGF3YWl0IGFwcC5lbnN1cmVMb2dpbigpO1xyXG4gICAgICAgIHd4LnNob3dUb2FzdCh7XHJcbiAgICAgICAgICAgIHRpdGxlOiAn5pWw5o2u5Yqg6L295LitJyxcclxuICAgICAgICAgICAgaWNvbjogJ2xvYWRpbmcnLFxyXG4gICAgICAgICAgICBkdXJhdGlvbjogMTAwMDBcclxuICAgICAgICB9KTtcclxuICAgICAgICBhd2FpdCB3YXJyYW50eVNlcnZpY2Uuc2FtcGxpbmdEYXRhYmFzZSgpO1xyXG4gICAgICAgIGxldCB3YXJyYW50eUl0ZW1zID0gYXdhaXQgd2FycmFudHlTZXJ2aWNlLmxvYWRXYXJyYW50eUl0ZW1zKCk7XHJcblxyXG4gICAgICAgIGxldCB2aWV3SXRlbXM6IFdhcnJhbnR5TGlzdEl0ZW1bXSA9IFtdO1xyXG4gICAgICAgIHdhcnJhbnR5SXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgdmlld0l0ZW1zLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgaWQ6IGl0ZW0uX2lkLFxyXG4gICAgICAgICAgICAgICAgcGxhdGU6IGl0ZW0ucGxhdGUsXHJcbiAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGl0ZW0udGh1bWJuYWlsLFxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGDotKjkv53mnJ/pmZDvvJogJHttb21lbnQoaXRlbS5lbmREYXRlKS5mb3JtYXQoXCJZWVlZLU1NLUREXCIpfWAsXHJcbiAgICAgICAgICAgICAgICBhcHByb3ZhbFN0YXR1czogaXRlbS5hcHByb3ZhbFN0YXR1c1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIGNvbnNvbGUubG9nKHdhcnJhbnR5SXRlbXMpO1xyXG5cclxuICAgICAgICB3eC5oaWRlVG9hc3QoKTtcclxuICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICBpdGVtczogdmlld0l0ZW1zLFxyXG4gICAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfSxcclxuXHJcbiAgICBvblNob3coKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5yb3V0ZSk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uSXRlbUNsaWNrZWQoZTogZXZlbnQuVG91Y2gpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlKTtcclxuICAgICAgICBsZXQgaXRlbUlkID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXRbXCJpdGVtSWRcIl07XHJcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XHJcbiAgICAgICAgICAgIHVybDogXCIuL2RldGFpbC9kZXRhaWw/aWQ9XCIgKyBpdGVtSWQsXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcblxyXG5cclxuXHJcbiAgICBhZGROZXcoKSB7XHJcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XHJcbiAgICAgICAgICAgIHVybDogJy4vYWRkL2FkZD9pZD0xJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBhc3luYyBvbkl0ZW1SZW1vdmVkKGlkOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgaXRlbXMgPSB0aGlzLmRhdGEuaXRlbXM7XHJcbiAgICAgICAgbGV0IGkgPSBpdGVtcy5maW5kSW5kZXgoeCA9PiB4LmlkID09IGlkKTtcclxuICAgICAgICBpdGVtcy5zcGxpY2UoaSwxKTtcclxuICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICBpdGVtczogaXRlbXNcclxuICAgICAgICB9KTtcclxuICAgICAgICAvL2F3YWl0IHdhcnJhbnR5U2VydmljZS5yZW1vdmVXYXJyYW50eUl0ZW0oaWQpO1xyXG4gICAgfVxyXG5cclxufSlcclxuXHJcbiJdfQ==