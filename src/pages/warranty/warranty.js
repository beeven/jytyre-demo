"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const moment = require("moment-mini-ts");
const warranty_service_1 = require("./warranty.service");
const app = getApp();
Page({
    data: {
        loading: true,
        items: []
    },
    async onLoad() {
        await app.ensureLogin();
        wx.showToast({
            title: '数据加载中',
            icon: 'loading',
            duration: 10000
        });
        await warranty_service_1.warrantyService.samplingDatabase();
        let warrantyItems = await warranty_service_1.warrantyService.loadWarrantyItems();
        let viewItems = [];
        warrantyItems.forEach(item => {
            viewItems.push({
                id: item._id,
                plate: item.plate,
                thumbnail: item.thumbnail,
                description: `质保期限： ${moment(item.endDate).format("YYYY-MM-DD")}`,
                approvalStatus: item.approvalStatus
            });
        });
        console.log(warrantyItems);
        wx.hideToast();
        this.setData({
            items: viewItems,
            loading: false
        });
    },
    onShow() {
        console.log(this.route);
    },
    onItemClicked(e) {
        console.log(e);
        let itemId = e.currentTarget.dataset["itemId"];
        wx.navigateTo({
            url: "./detail/detail?id=" + itemId,
        });
    },
    async addNew() {
        let warrantyID = await warranty_service_1.warrantyService.createWarrantyItem();
        wx.navigateTo({
            url: `./add/add?id=${warrantyID}`
        });
    },
    async onItemRemoved(id) {
        let items = this.data.items;
        let i = items.findIndex(x => x.id == id);
        items.splice(i, 1);
        this.setData({
            items: items
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FycmFudHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3YXJyYW50eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHlDQUF5QztBQUN6Qyx5REFBcUU7QUFFckUsTUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFVLENBQUM7QUF1QjdCLElBQUksQ0FBaUM7SUFDakMsSUFBSSxFQUFFO1FBQ0YsT0FBTyxFQUFFLElBQUk7UUFDYixLQUFLLEVBQUUsRUFDTjtLQUNnQjtJQUNyQixLQUFLLENBQUMsTUFBTTtRQUNSLE1BQU0sR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3hCLEVBQUUsQ0FBQyxTQUFTLENBQUM7WUFDVCxLQUFLLEVBQUUsT0FBTztZQUNkLElBQUksRUFBRSxTQUFTO1lBQ2YsUUFBUSxFQUFFLEtBQUs7U0FDbEIsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxrQ0FBZSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDekMsSUFBSSxhQUFhLEdBQUcsTUFBTSxrQ0FBZSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFFOUQsSUFBSSxTQUFTLEdBQXVCLEVBQUUsQ0FBQztRQUN2QyxhQUFhLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3pCLFNBQVMsQ0FBQyxJQUFJLENBQUM7Z0JBQ1gsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTO2dCQUN6QixXQUFXLEVBQUUsU0FBUyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDakUsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2FBQ3RDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFBO1FBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUzQixFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsS0FBSyxFQUFFLFNBQVM7WUFDaEIsT0FBTyxFQUFFLEtBQUs7U0FDakIsQ0FBQyxDQUFBO0lBRU4sQ0FBQztJQUVELE1BQU07UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsYUFBYSxDQUFDLENBQWM7UUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNmLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9DLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUUscUJBQXFCLEdBQUcsTUFBTTtTQUN0QyxDQUFDLENBQUE7SUFDTixDQUFDO0lBSUQsS0FBSyxDQUFDLE1BQU07UUFDUixJQUFJLFVBQVUsR0FBRyxNQUFNLGtDQUFlLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUM1RCxFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsR0FBRyxFQUFFLGdCQUFnQixVQUFVLEVBQUU7U0FDcEMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUdELEtBQUssQ0FBQyxhQUFhLENBQUMsRUFBVTtRQUMxQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUM1QixJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUN6QyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsS0FBSyxFQUFFLEtBQUs7U0FDZixDQUFDLENBQUM7SUFDUCxDQUFDO0NBRUosQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU15QXBwIH0gZnJvbSBcIi4uLy4uL2FwcFwiO1xuaW1wb3J0ICogYXMgbW9tZW50IGZyb20gXCJtb21lbnQtbWluaS10c1wiO1xuaW1wb3J0IHsgd2FycmFudHlTZXJ2aWNlLCBBcHByb3ZhbFN0YXR1cyB9IGZyb20gJy4vd2FycmFudHkuc2VydmljZSc7XG5cbmNvbnN0IGFwcCA9IGdldEFwcDxJTXlBcHA+KCk7XG5cblxuXG5leHBvcnQgaW50ZXJmYWNlIFdhcnJhbnR5TGlzdEl0ZW0ge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgcGxhdGU6IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIHRodW1ibmFpbDogc3RyaW5nO1xuICAgIGFwcHJvdmFsU3RhdHVzOiBBcHByb3ZhbFN0YXR1cztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXYXJyYW50eVBhZ2VEYXRhIHtcbiAgICBpdGVtczogV2FycmFudHlMaXN0SXRlbVtdLFxuICAgIGxvYWRpbmc6IGJvb2xlYW5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBXYXJyYW50eVBhZ2Uge1xuICAgIG9uSXRlbUNsaWNrZWQoZTogYW55KTogdm9pZDtcbiAgICBhZGROZXcoKTogdm9pZDtcbiAgICBvbkl0ZW1SZW1vdmVkKGlkOiBzdHJpbmcpOiB2b2lkO1xufVxuXG5QYWdlPFdhcnJhbnR5UGFnZURhdGEsIFdhcnJhbnR5UGFnZT4oe1xuICAgIGRhdGE6IHtcbiAgICAgICAgbG9hZGluZzogdHJ1ZSxcbiAgICAgICAgaXRlbXM6IFtcbiAgICAgICAgXVxuICAgIH0gYXMgV2FycmFudHlQYWdlRGF0YSxcbiAgICBhc3luYyBvbkxvYWQoKSB7XG4gICAgICAgIGF3YWl0IGFwcC5lbnN1cmVMb2dpbigpO1xuICAgICAgICB3eC5zaG93VG9hc3Qoe1xuICAgICAgICAgICAgdGl0bGU6ICfmlbDmja7liqDovb3kuK0nLFxuICAgICAgICAgICAgaWNvbjogJ2xvYWRpbmcnLFxuICAgICAgICAgICAgZHVyYXRpb246IDEwMDAwXG4gICAgICAgIH0pO1xuICAgICAgICBhd2FpdCB3YXJyYW50eVNlcnZpY2Uuc2FtcGxpbmdEYXRhYmFzZSgpO1xuICAgICAgICBsZXQgd2FycmFudHlJdGVtcyA9IGF3YWl0IHdhcnJhbnR5U2VydmljZS5sb2FkV2FycmFudHlJdGVtcygpO1xuXG4gICAgICAgIGxldCB2aWV3SXRlbXM6IFdhcnJhbnR5TGlzdEl0ZW1bXSA9IFtdO1xuICAgICAgICB3YXJyYW50eUl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICB2aWV3SXRlbXMucHVzaCh7XG4gICAgICAgICAgICAgICAgaWQ6IGl0ZW0uX2lkLFxuICAgICAgICAgICAgICAgIHBsYXRlOiBpdGVtLnBsYXRlLFxuICAgICAgICAgICAgICAgIHRodW1ibmFpbDogaXRlbS50aHVtYm5haWwsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGDotKjkv53mnJ/pmZDvvJogJHttb21lbnQoaXRlbS5lbmREYXRlKS5mb3JtYXQoXCJZWVlZLU1NLUREXCIpfWAsXG4gICAgICAgICAgICAgICAgYXBwcm92YWxTdGF0dXM6IGl0ZW0uYXBwcm92YWxTdGF0dXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgICBjb25zb2xlLmxvZyh3YXJyYW50eUl0ZW1zKTtcblxuICAgICAgICB3eC5oaWRlVG9hc3QoKTtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIGl0ZW1zOiB2aWV3SXRlbXMsXG4gICAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICB9KVxuXG4gICAgfSxcblxuICAgIG9uU2hvdygpIHtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5yb3V0ZSk7XG4gICAgfSxcblxuICAgIG9uSXRlbUNsaWNrZWQoZTogZXZlbnQuVG91Y2gpIHtcbiAgICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICAgIGxldCBpdGVtSWQgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFtcIml0ZW1JZFwiXTtcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgICB1cmw6IFwiLi9kZXRhaWwvZGV0YWlsP2lkPVwiICsgaXRlbUlkLFxuICAgICAgICB9KVxuICAgIH0sXG5cblxuXG4gICAgYXN5bmMgYWRkTmV3KCkge1xuICAgICAgICBsZXQgd2FycmFudHlJRCA9IGF3YWl0IHdhcnJhbnR5U2VydmljZS5jcmVhdGVXYXJyYW50eUl0ZW0oKTtcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgICB1cmw6IGAuL2FkZC9hZGQ/aWQ9JHt3YXJyYW50eUlEfWBcbiAgICAgICAgfSlcbiAgICB9LFxuXG5cbiAgICBhc3luYyBvbkl0ZW1SZW1vdmVkKGlkOiBzdHJpbmcpIHtcbiAgICAgICAgbGV0IGl0ZW1zID0gdGhpcy5kYXRhLml0ZW1zO1xuICAgICAgICBsZXQgaSA9IGl0ZW1zLmZpbmRJbmRleCh4ID0+IHguaWQgPT0gaWQpO1xuICAgICAgICBpdGVtcy5zcGxpY2UoaSwxKTtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIGl0ZW1zOiBpdGVtc1xuICAgICAgICB9KTtcbiAgICB9XG5cbn0pXG5cbiJdfQ==