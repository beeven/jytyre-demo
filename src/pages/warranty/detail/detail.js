"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const warranty_service_1 = require("../warranty.service");
Page({
    data: {},
    async onLoad(options) {
        console.log(options);
        let ret = await warranty_service_1.warrantyService.getWarrantyItemDetail(options["id"]);
        this.setData({
            id: ret._id,
            plate: ret.plate || "",
            plateImageUrl: ret.plateImageUrl || "",
            shopImageUrl: ret.shopImageUrl || "",
            shopAddress: ret.shopAddress || "",
            tyreImageUrls: ret.tyreImageUrls || [],
            datePurchased: ret.datePurchased.toString() || "",
            endDate: ret.endDate.toDateString() || "",
            approvalStatus: ret.approvalStatus || warranty_service_1.ApprovalStatus.drafting
        });
    },
    async onRemoveWarranty() {
        wx.showLoading({
            title: '提交中'
        });
        await warranty_service_1.warrantyService.removeWarrantyItem(this.data.id);
        let pages = getCurrentPages();
        console.log(pages);
        let page = pages[pages.length - 2];
        await page.onItemRemoved(this.data.id);
        wx.hideLoading();
        wx.navigateBack({
            delta: 1,
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0YWlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGV0YWlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMERBQXFFO0FBaUJyRSxJQUFJLENBQUM7SUFDRCxJQUFJLEVBQUUsRUFFcUI7SUFDM0IsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPO1FBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFckIsSUFBSSxHQUFHLEdBQUcsTUFBTSxrQ0FBZSxDQUFDLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUUsQ0FBQyxDQUFDO1FBRXRFLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxFQUFFLEVBQUUsR0FBRyxDQUFDLEdBQUc7WUFDWCxLQUFLLEVBQUUsR0FBRyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQ3RCLGFBQWEsRUFBRSxHQUFHLENBQUMsYUFBYSxJQUFJLEVBQUU7WUFDdEMsWUFBWSxFQUFFLEdBQUcsQ0FBQyxZQUFZLElBQUksRUFBRTtZQUNwQyxXQUFXLEVBQUUsR0FBRyxDQUFDLFdBQVcsSUFBSSxFQUFFO1lBQ2xDLGFBQWEsRUFBRSxHQUFHLENBQUMsYUFBYSxJQUFJLEVBQUU7WUFDdEMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxhQUFjLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRTtZQUNsRCxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQVEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxFQUFFO1lBQzFDLGNBQWMsRUFBRSxHQUFHLENBQUMsY0FBYyxJQUFJLGlDQUFjLENBQUMsUUFBUTtTQUNoRSxDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsS0FBSyxDQUFDLGdCQUFnQjtRQUNsQixFQUFFLENBQUMsV0FBVyxDQUFDO1lBQ1gsS0FBSyxFQUFFLEtBQUs7U0FDZixDQUFDLENBQUM7UUFDSCxNQUFNLGtDQUFlLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN2RCxJQUFJLEtBQUssR0FBRyxlQUFlLEVBQUUsQ0FBQztRQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25CLElBQUksSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBNEIsQ0FBQztRQUM1RCxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN2QyxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDakIsRUFBRSxDQUFDLFlBQVksQ0FBQztZQUNaLEtBQUssRUFBRSxDQUFDO1NBQ1gsQ0FBQyxDQUFBO0lBQ04sQ0FBQztDQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7d2FycmFudHlTZXJ2aWNlLCBBcHByb3ZhbFN0YXR1cyB9IGZyb20gXCIuLi93YXJyYW50eS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFdhcnJhbnR5UGFnZURhdGEsIFdhcnJhbnR5UGFnZX0gZnJvbSAnLi4vd2FycmFudHknO1xyXG5cclxuaW50ZXJmYWNlIFdhcnJhbnR5RGV0YWlsUGFnZURhdGEge1xyXG4gICAgaWQ6IHN0cmluZztcclxuICAgIHBsYXRlOiBzdHJpbmc7XHJcbiAgICBwbGF0ZUltYWdlVXJsOiBzdHJpbmc7XHJcbiAgICBzaG9wSW1hZ2VVcmw6IHN0cmluZztcclxuICAgIHNob3BBZGRyZXNzOiBzdHJpbmc7XHJcbiAgICB0eXJlSW1hZ2VVcmxzOiBzdHJpbmdbXTtcclxuICAgIGRhdGVQdXJjaGFzZWQ6IHN0cmluZztcclxuICAgIGVuZERhdGU6IHN0cmluZyxcclxuICAgIGFwcHJvdmFsU3RhdHVzOiBBcHByb3ZhbFN0YXR1cyxcclxuXHJcbn1cclxuXHJcblxyXG5QYWdlKHtcclxuICAgIGRhdGE6IHtcclxuICAgICAgICBcclxuICAgIH0gYXMgV2FycmFudHlEZXRhaWxQYWdlRGF0YSxcclxuICAgIGFzeW5jIG9uTG9hZChvcHRpb25zKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2cob3B0aW9ucyk7XHJcblxyXG4gICAgICAgIGxldCByZXQgPSBhd2FpdCB3YXJyYW50eVNlcnZpY2UuZ2V0V2FycmFudHlJdGVtRGV0YWlsKG9wdGlvbnNbXCJpZFwiXSEpO1xyXG5cclxuICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICBpZDogcmV0Ll9pZCxcclxuICAgICAgICAgICAgcGxhdGU6IHJldC5wbGF0ZSB8fCBcIlwiLFxyXG4gICAgICAgICAgICBwbGF0ZUltYWdlVXJsOiByZXQucGxhdGVJbWFnZVVybCB8fCBcIlwiLFxyXG4gICAgICAgICAgICBzaG9wSW1hZ2VVcmw6IHJldC5zaG9wSW1hZ2VVcmwgfHwgXCJcIixcclxuICAgICAgICAgICAgc2hvcEFkZHJlc3M6IHJldC5zaG9wQWRkcmVzcyB8fCBcIlwiLFxyXG4gICAgICAgICAgICB0eXJlSW1hZ2VVcmxzOiByZXQudHlyZUltYWdlVXJscyB8fCBbXSxcclxuICAgICAgICAgICAgZGF0ZVB1cmNoYXNlZDogcmV0LmRhdGVQdXJjaGFzZWQhLnRvU3RyaW5nKCkgfHwgXCJcIixcclxuICAgICAgICAgICAgZW5kRGF0ZTogcmV0LmVuZERhdGUhLnRvRGF0ZVN0cmluZygpIHx8IFwiXCIsXHJcbiAgICAgICAgICAgIGFwcHJvdmFsU3RhdHVzOiByZXQuYXBwcm92YWxTdGF0dXMgfHwgQXBwcm92YWxTdGF0dXMuZHJhZnRpbmdcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuXHJcbiAgICBhc3luYyBvblJlbW92ZVdhcnJhbnR5KCkge1xyXG4gICAgICAgIHd4LnNob3dMb2FkaW5nKHtcclxuICAgICAgICAgICAgdGl0bGU6ICfmj5DkuqTkuK0nXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYXdhaXQgd2FycmFudHlTZXJ2aWNlLnJlbW92ZVdhcnJhbnR5SXRlbSh0aGlzLmRhdGEuaWQpO1xyXG4gICAgICAgIGxldCBwYWdlcyA9IGdldEN1cnJlbnRQYWdlcygpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHBhZ2VzKTtcclxuICAgICAgICBsZXQgcGFnZSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aC0yXSBhcyB1bmtub3duIGFzIFdhcnJhbnR5UGFnZTtcclxuICAgICAgICBhd2FpdCBwYWdlLm9uSXRlbVJlbW92ZWQodGhpcy5kYXRhLmlkKTtcclxuICAgICAgICB3eC5oaWRlTG9hZGluZygpO1xyXG4gICAgICAgIHd4Lm5hdmlnYXRlQmFjayh7XHJcbiAgICAgICAgICAgIGRlbHRhOiAxLFxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pIl19