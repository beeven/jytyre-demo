"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const warranty_service_1 = require("../warranty.service");
const moment = require("moment-mini-ts");
Page({
    data: {
        shopName: null,
        shopAddress: null,
        datePurchased: moment().format("YYYY-MM-DD"),
    },
    onLoad(options) {
        let warrantyID = options["id"];
        this.setData({
            warrantyID: warrantyID
        });
    },
    async onUnload() {
        let pages = getCurrentPages();
        console.log(pages);
        let page = pages[pages.length - 2];
        await page.onItemAdded(this.data.warrantyID, {
            plateNumber: this.data.plateNumber || '车牌未填写',
            id: this.data.warrantyID,
            approvalStatus: warranty_service_1.ApprovalStatus.drafting,
            description: '',
            thumbnail: ""
        });
        console.log(this.data);
        await warranty_service_1.warrantyService.updateWarrantyItem(this.data.warrantyID, {
            plateNumber: this.data.plateNumber
        }, this.data.shopLocation ? {
            longtitude: +this.data.shopLocation.longtitude,
            latitude: +this.data.shopLocation.latitude
        } : undefined);
    },
    onDateChanged(e) {
        console.log(e.detail.value);
        this.setData({
            datePurchased: e.detail.value
        });
    },
    onGetLocation() {
        wx.chooseLocation({
            success: res => {
                this.setData({
                    shopAddress: res.address,
                    shopLocation: {
                        latitude: +res.latitude,
                        longtitude: +res.longitude
                    },
                    shopName: res.name
                });
            },
            fail: err => {
                console.log(err);
                wx.showToast({
                    title: '获取定位失败',
                    icon: 'none',
                    duration: 2000
                });
            }
        });
    },
    async onScanPlate() {
        let imgFile = await new Promise((resolve, reject) => {
            wx.chooseImage({
                count: 1,
                sizeType: ['compressed'],
                sourceType: ['album', 'camera'],
                success: (res) => {
                    resolve(res.tempFiles[0]);
                },
                fail: err => {
                    reject(err);
                }
            });
        });
        console.log(imgFile.size);
        this.setData({
            plateImageFileID: "123",
            plateImageFilePath: imgFile.path
        });
        try {
            wx.showLoading({
                title: '数据上传中',
                mask: true
            });
            let ret = await warranty_service_1.warrantyService.uploadPlateImage(this.data.warrantyID, imgFile.path);
            wx.hideLoading();
            this.setData({
                plateNumber: ret.plateNumber,
                plateImageFileID: ret.fileID
            });
        }
        catch (err) {
            wx.hideLoading();
            wx.showModal({
                title: '提示',
                content: '照片识别失败，请按照要求重新上传',
                showCancel: false
            });
        }
    },
    previewImage(e) {
        console.log(e);
        let name = e.currentTarget.dataset["name"];
        console.log(e.currentTarget);
        let url;
        switch (name) {
            case "shop":
                url = "../../../assets/shopFront.jpg";
                break;
            case "tyre-model":
                url = "../../../assets/tyre-model.jpg";
                break;
            case "tyre-installation":
                url = "../../../assets/tyre-installation.jpg";
                break;
        }
        wx.previewImage({
            urls: [url],
            current: url
        });
    },
    chooseImage(e) {
        console.log(e);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYWRkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsMERBQW9FO0FBRXBFLHlDQUF5QztBQWtCekMsSUFBSSxDQUFDO0lBQ0QsSUFBSSxFQUFFO1FBQ0YsUUFBUSxFQUFFLElBQUk7UUFDZCxXQUFXLEVBQUUsSUFBSTtRQUNqQixhQUFhLEVBQUUsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQztLQUV4QjtJQUV4QixNQUFNLENBQUMsT0FBTztRQUNWLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsVUFBVSxFQUFFLFVBQVU7U0FDekIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELEtBQUssQ0FBQyxRQUFRO1FBRVYsSUFBSSxLQUFLLEdBQUcsZUFBZSxFQUFFLENBQUM7UUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQixJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQTRCLENBQUM7UUFDNUQsTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ3pDLFdBQVcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxPQUFPO1lBQzdDLEVBQUUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVU7WUFDeEIsY0FBYyxFQUFFLGlDQUFjLENBQUMsUUFBUTtZQUN2QyxXQUFXLEVBQUUsRUFBRTtZQUNmLFNBQVMsRUFBRSxFQUFFO1NBQ2hCLENBQUMsQ0FBQztRQUdILE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZCLE1BQU0sa0NBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFB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QUFNO2FBQy9CLENBQUMsQ0FBQztTQUNOO1FBQUMsT0FBTSxHQUFHLEVBQUU7WUFDVCxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDakIsRUFBRSxDQUFDLFNBQVMsQ0FBQztnQkFDVCxLQUFLLEVBQUUsSUFBSTtnQkFDWCxPQUFPLEVBQUUsa0JBQWtCO2dCQUMzQixVQUFVLEVBQUUsS0FBSzthQUNwQixDQUFDLENBQUM7U0FDTjtJQUdMLENBQUM7SUFFRCxZQUFZLENBQUMsQ0FBYztRQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDN0IsSUFBSSxHQUFHLENBQUM7UUFDUixRQUFPLElBQUksRUFBRTtZQUNULEtBQUssTUFBTTtnQkFDUCxHQUFHLEdBQUcsK0JBQStCLENBQUM7Z0JBQ3RDLE1BQU07WUFDVixLQUFLLFlBQVk7Z0JBQ2IsR0FBRyxHQUFHLGdDQUFnQyxDQUFDO2dCQUN2QyxNQUFNO1lBQ1YsS0FBSyxtQkFBbUI7Z0JBQ3BCLEdBQUcsR0FBRyx1Q0FBdUMsQ0FBQTtnQkFDN0MsTUFBTTtTQUNiO1FBQ0QsRUFBRSxDQUFDLFlBQVksQ0FBQztZQUNaLElBQUksRUFBQyxDQUFDLEdBQUcsQ0FBQztZQUNWLE9BQU8sRUFBRSxHQUFHO1NBQ2YsQ0FBQyxDQUFDO0lBRVAsQ0FBQztJQUVELFdBQVcsQ0FBQyxDQUFhO1FBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQge3dhcnJhbnR5U2VydmljZSwgQXBwcm92YWxTdGF0dXN9IGZyb20gJy4uL3dhcnJhbnR5LnNlcnZpY2UnO1xyXG5cclxuaW1wb3J0ICogYXMgbW9tZW50IGZyb20gXCJtb21lbnQtbWluaS10c1wiO1xyXG5pbXBvcnQgeyBXYXJyYW50eVBhZ2UgfSBmcm9tICcuLi93YXJyYW50eSc7XHJcblxyXG5pbnRlcmZhY2UgQWRkV2FycmFudHlQYWdlRGF0YSB7XHJcbiAgICB3YXJyYW50eUlEOiBzdHJpbmc7XHJcbiAgICBzaG9wTmFtZTogc3RyaW5nIHwgbnVsbDtcclxuICAgIHNob3BBZGRyZXNzIDogc3RyaW5nIHwgbnVsbDtcclxuICAgIHNob3BMb2NhdGlvbj86IHtcclxuICAgICAgICBsb25ndGl0dWRlOiBudW1iZXIsXHJcbiAgICAgICAgbGF0aXR1ZGU6IG51bWJlclxyXG4gICAgfVxyXG4gICAgZGF0ZVB1cmNoYXNlZDogc3RyaW5nO1xyXG4gICAgcGxhdGVOdW1iZXI6IHN0cmluZztcclxuICAgIHBsYXRlSW1hZ2VGaWxlSUQ6IHN0cmluZztcclxuICAgIHBsYXRlSW1hZ2VGaWxlUGF0aDogc3RyaW5nO1xyXG59XHJcblxyXG5cclxuUGFnZSh7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgc2hvcE5hbWU6IG51bGwsXHJcbiAgICAgICAgc2hvcEFkZHJlc3M6IG51bGwsXHJcbiAgICAgICAgZGF0ZVB1cmNoYXNlZDogbW9tZW50KCkuZm9ybWF0KFwiWVlZWS1NTS1ERFwiKSxcclxuXHJcbiAgICB9IGFzIEFkZFdhcnJhbnR5UGFnZURhdGEsXHJcblxyXG4gICAgb25Mb2FkKG9wdGlvbnMpIHtcclxuICAgICAgICBsZXQgd2FycmFudHlJRCA9IG9wdGlvbnNbXCJpZFwiXTtcclxuICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICB3YXJyYW50eUlEOiB3YXJyYW50eUlEXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIGFzeW5jIG9uVW5sb2FkKCkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBwYWdlcyA9IGdldEN1cnJlbnRQYWdlcygpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHBhZ2VzKTtcclxuICAgICAgICBsZXQgcGFnZSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aC0yXSBhcyB1bmtub3duIGFzIFdhcnJhbnR5UGFnZTtcclxuICAgICAgICBhd2FpdCBwYWdlLm9uSXRlbUFkZGVkKHRoaXMuZGF0YS53YXJyYW50eUlELCB7XHJcbiAgICAgICAgICAgIHBsYXRlTnVtYmVyOiB0aGlzLmRhdGEucGxhdGVOdW1iZXIgfHwgJ+i9pueJjOacquWhq+WGmScsXHJcbiAgICAgICAgICAgIGlkOiB0aGlzLmRhdGEud2FycmFudHlJRCxcclxuICAgICAgICAgICAgYXBwcm92YWxTdGF0dXM6IEFwcHJvdmFsU3RhdHVzLmRyYWZ0aW5nLFxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJycsXHJcbiAgICAgICAgICAgIHRodW1ibmFpbDogXCJcIlxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhKTtcclxuICAgICAgICBhd2FpdCB3YXJyYW50eVNlcnZpY2UudXBkYXRlV2FycmFudHlJdGVtKHRoaXMuZGF0YS53YXJyYW50eUlELCB7XHJcbiAgICAgICAgICAgIHBsYXRlTnVtYmVyOiB0aGlzLmRhdGEucGxhdGVOdW1iZXJcclxuICAgICAgICB9LCB0aGlzLmRhdGEuc2hvcExvY2F0aW9uID8gIHtcclxuICAgICAgICAgICAgbG9uZ3RpdHVkZTordGhpcy5kYXRhLnNob3BMb2NhdGlvbiEubG9uZ3RpdHVkZSxcclxuICAgICAgICAgICAgbGF0aXR1ZGU6K3RoaXMuZGF0YS5zaG9wTG9jYXRpb24hLmxhdGl0dWRlXHJcbiAgICAgICAgfTogdW5kZWZpbmVkKTtcclxuICAgIH0sXHJcblxyXG4gICAgb25EYXRlQ2hhbmdlZChlOiBldmVudC5JbnB1dCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGUuZGV0YWlsLnZhbHVlKVxyXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgIGRhdGVQdXJjaGFzZWQ6IGUuZGV0YWlsLnZhbHVlXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcblxyXG4gICAgb25HZXRMb2NhdGlvbigpIHtcclxuICAgICAgICB3eC5jaG9vc2VMb2NhdGlvbih7XHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHJlcyA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3BBZGRyZXNzOiByZXMuYWRkcmVzcyxcclxuICAgICAgICAgICAgICAgICAgICBzaG9wTG9jYXRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGF0aXR1ZGU6ICtyZXMubGF0aXR1ZGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvbmd0aXR1ZGU6ICtyZXMubG9uZ2l0dWRlXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBzaG9wTmFtZTogcmVzLm5hbWVcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBmYWlsOiBlcnIgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgICAgICAgIHd4LnNob3dUb2FzdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfojrflj5blrprkvY3lpLHotKUnLFxyXG4gICAgICAgICAgICAgICAgICAgIGljb246ICdub25lJyxcclxuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMFxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIGFzeW5jIG9uU2NhblBsYXRlKCkge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBpbWdGaWxlID0gYXdhaXQgbmV3IFByb21pc2U8d3guSW1hZ2VGaWxlPigocmVzb2x2ZSxyZWplY3QpPT57XHJcbiAgICAgICAgICAgIHd4LmNob29zZUltYWdlKHtcclxuICAgICAgICAgICAgICAgIGNvdW50OiAxLFxyXG4gICAgICAgICAgICAgICAgc2l6ZVR5cGU6IFsnY29tcHJlc3NlZCddLFxyXG4gICAgICAgICAgICAgICAgc291cmNlVHlwZTogWydhbGJ1bScsICdjYW1lcmEnXSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlcy50ZW1wRmlsZXNbMF0pXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmFpbDogZXJyID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2coaW1nRmlsZS5zaXplKTtcclxuXHJcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgICAgICAgcGxhdGVJbWFnZUZpbGVJRDogXCIxMjNcIixcclxuICAgICAgICAgICAgcGxhdGVJbWFnZUZpbGVQYXRoOiBpbWdGaWxlLnBhdGhcclxuICAgICAgICB9KVxyXG5cclxuICAgIFxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHd4LnNob3dMb2FkaW5nKHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAn5pWw5o2u5LiK5Lyg5LitJyxcclxuICAgICAgICAgICAgICAgIG1hc2s6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGxldCByZXQgPSBhd2FpdCB3YXJyYW50eVNlcnZpY2UudXBsb2FkUGxhdGVJbWFnZSh0aGlzLmRhdGEud2FycmFudHlJRCwgaW1nRmlsZS5wYXRoKTtcclxuICAgICAgICAgICAgd3guaGlkZUxvYWRpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgICAgICAgICAgIHBsYXRlTnVtYmVyOiByZXQucGxhdGVOdW1iZXIsXHJcbiAgICAgICAgICAgICAgICBwbGF0ZUltYWdlRmlsZUlEOiByZXQuZmlsZUlEXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gY2F0Y2goZXJyKSB7XHJcbiAgICAgICAgICAgIHd4LmhpZGVMb2FkaW5nKCk7XHJcbiAgICAgICAgICAgIHd4LnNob3dNb2RhbCh7XHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+aPkOekuicsXHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAn54Wn54mH6K+G5Yir5aSx6LSl77yM6K+35oyJ54Wn6KaB5rGC6YeN5paw5LiK5LygJyxcclxuICAgICAgICAgICAgICAgIHNob3dDYW5jZWw6IGZhbHNlXHJcbiAgICAgICAgICAgIH0pOyAgIFxyXG4gICAgICAgIH0gXHJcblxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgcHJldmlld0ltYWdlKGU6IGV2ZW50LlRvdWNoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZSk7XHJcbiAgICAgICAgbGV0IG5hbWUgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldFtcIm5hbWVcIl07XHJcbiAgICAgICAgY29uc29sZS5sb2coZS5jdXJyZW50VGFyZ2V0KTtcclxuICAgICAgICBsZXQgdXJsO1xyXG4gICAgICAgIHN3aXRjaChuYW1lKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJzaG9wXCI6XHJcbiAgICAgICAgICAgICAgICB1cmwgPSBcIi4uLy4uLy4uL2Fzc2V0cy9zaG9wRnJvbnQuanBnXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInR5cmUtbW9kZWxcIjpcclxuICAgICAgICAgICAgICAgIHVybCA9IFwiLi4vLi4vLi4vYXNzZXRzL3R5cmUtbW9kZWwuanBnXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInR5cmUtaW5zdGFsbGF0aW9uXCI6XHJcbiAgICAgICAgICAgICAgICB1cmwgPSBcIi4uLy4uLy4uL2Fzc2V0cy90eXJlLWluc3RhbGxhdGlvbi5qcGdcIlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHd4LnByZXZpZXdJbWFnZSh7XHJcbiAgICAgICAgICAgIHVybHM6W3VybF0sXHJcbiAgICAgICAgICAgIGN1cnJlbnQ6IHVybFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH0sXHJcblxyXG4gICAgY2hvb3NlSW1hZ2UoZTpldmVudC5Ub3VjaCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xyXG4gICAgfVxyXG59KVxyXG4iXX0=