"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const warranty_service_1 = require("../warranty.service");
const moment = require("moment-mini-ts");
Page({
    data: {
        shopName: null,
        shopAddress: null,
        datePurchased: moment().format("YYYY-MM-DD"),
    },
    onLoad(options) {
        let warrantyID = options["id"];
        this.setData({
            warrantyID: warrantyID
        });
    },
    async onUnload() {
        await warranty_service_1.warrantyService.updateWarrantyItem(this.data.warrantyID, {
            plate: this.data.plateNumber
        }, {
            longtitude: parseFloat(this.data.shopLocation.longtitude),
            latitude: parseFloat(this.data.shopLocation.latitude)
        });
    },
    onDateChanged(e) {
        console.log(e.detail.value);
        this.setData({
            datePurchased: e.detail.value
        });
    },
    onGetLocation() {
        wx.chooseLocation({
            success: res => {
                this.setData({
                    shopAddress: res.address,
                    shopLocation: {
                        latitude: res.latitude,
                        longtitude: res.longitude
                    },
                    shopName: res.name
                });
            },
            fail: err => {
                console.log(err);
                wx.showToast({
                    title: '获取定位失败',
                    icon: 'none',
                    duration: 2000
                });
            }
        });
    },
    async onScanPlate() {
        let imgFile = await new Promise((resolve, reject) => {
            wx.chooseImage({
                count: 1,
                sizeType: ['compressed'],
                sourceType: ['album', 'camera'],
                success: (res) => {
                    resolve(res.tempFiles[0]);
                },
                fail: err => {
                    reject(err);
                }
            });
        });
        let ret = await warranty_service_1.warrantyService.uploadPlateImage(this.data.warrantyID, imgFile.path);
        this.setData({
            plate: ret.plateNumber,
            plateImageFileID: ret.fileID
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYWRkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsMERBQW9EO0FBRXBELHlDQUF5QztBQWdCekMsSUFBSSxDQUFDO0lBQ0QsSUFBSSxFQUFFO1FBQ0YsUUFBUSxFQUFFLElBQUk7UUFDZCxXQUFXLEVBQUUsSUFBSTtRQUNqQixhQUFhLEVBQUUsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQztLQUV4QjtJQUV4QixNQUFNLENBQUMsT0FBTztRQUNWLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1QsVUFBVSxFQUFFLFVBQVU7U0FDekIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELEtBQUssQ0FBQyxRQUFRO1FBQ1YsTUFBTSxrQ0FBZSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQzNELEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVc7U0FDL0IsRUFBRztZQUNBLFVBQVUsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFhLENBQUMsVUFBVSxDQUFDO1lBQzFELFFBQVEsRUFBRSxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFhLENBQUMsUUFBUSxDQUFDO1NBQ3pELENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhLENBQUMsQ0FBYztRQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULGFBQWEsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7U0FDaEMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELGFBQWE7UUFDVCxFQUFFLENBQUMsY0FBYyxDQUFDO1lBQ2QsT0FBTyxFQUFFLEdBQUcsQ0FBQyxFQUFFO2dCQUNYLElBQUksQ0FBQyxPQUFPLENBQUM7b0JBQ1QsV0FBVyxFQUFFLEdBQUcsQ0FBQyxPQUFPO29CQUN4QixZQUFZLEVBQUU7d0JBQ1YsUUFBUSxFQUFFLEdBQUcsQ0FBQyxRQUFRO3dCQUN0QixVQUFVLEVBQUUsR0FBRyxDQUFDLFNBQVM7cUJBQzVCO29CQUNELFFBQVEsRUFBRSxHQUFHLENBQUMsSUFBSTtpQkFDckIsQ0FBQyxDQUFDO1lBQ1AsQ0FBQztZQUNELElBQUksRUFBRSxHQUFHLENBQUMsRUFBRTtnQkFDUixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQixFQUFFLENBQUMsU0FBUyxDQUFDO29CQUNULEtBQUssRUFBRSxRQUFRO29CQUNmLElBQUksRUFBRSxNQUFNO29CQUNaLFFBQVEsRUFBRSxJQUFJO2lCQUNqQixDQUFDLENBQUE7WUFDTixDQUFDO1NBQ0osQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELEtBQUssQ0FBQyxXQUFXO1FBQ2IsSUFBSSxPQUFPLEdBQUcsTUFBTSxJQUFJLE9BQU8sQ0FBZSxDQUFDLE9BQU8sRUFBQyxNQUFNLEVBQUMsRUFBRTtZQUM1RCxFQUFFLENBQUMsV0FBVyxDQUFDO2dCQUNYLEtBQUssRUFBRSxDQUFDO2dCQUNSLFFBQVEsRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDeEIsVUFBVSxFQUFFLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQztnQkFDL0IsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7b0JBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtnQkFDN0IsQ0FBQztnQkFDRCxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUU7b0JBQ1IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNoQixDQUFDO2FBQ0osQ0FBQyxDQUFBO1FBQ04sQ0FBQyxDQUFDLENBQUM7UUFFSCxJQUFJLEdBQUcsR0FBRyxNQUFNLGtDQUFlLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JGLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxLQUFLLEVBQUUsR0FBRyxDQUFDLFdBQVc7WUFDdEIsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLE1BQU07U0FDL0IsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHt3YXJyYW50eVNlcnZpY2V9IGZyb20gJy4uL3dhcnJhbnR5LnNlcnZpY2UnO1xuXG5pbXBvcnQgKiBhcyBtb21lbnQgZnJvbSBcIm1vbWVudC1taW5pLXRzXCI7XG5cbmludGVyZmFjZSBBZGRXYXJyYW50eVBhZ2VEYXRhIHtcbiAgICB3YXJyYW50eUlEOiBzdHJpbmc7XG4gICAgc2hvcE5hbWU6IHN0cmluZyB8IG51bGw7XG4gICAgc2hvcEFkZHJlc3MgOiBzdHJpbmcgfCBudWxsO1xuICAgIHNob3BMb2NhdGlvbj86IHtcbiAgICAgICAgbGF0aXR1ZGU6IHN0cmluZyxcbiAgICAgICAgbG9uZ3RpdHVkZTogc3RyaW5nXG4gICAgfVxuICAgIGRhdGVQdXJjaGFzZWQ6IHN0cmluZztcbiAgICBwbGF0ZU51bWJlcjogc3RyaW5nO1xuICAgIHBsYXRlSW1hZ2VGaWxlSUQ6IHN0cmluZztcbn1cblxuXG5QYWdlKHtcbiAgICBkYXRhOiB7XG4gICAgICAgIHNob3BOYW1lOiBudWxsLFxuICAgICAgICBzaG9wQWRkcmVzczogbnVsbCxcbiAgICAgICAgZGF0ZVB1cmNoYXNlZDogbW9tZW50KCkuZm9ybWF0KFwiWVlZWS1NTS1ERFwiKSxcblxuICAgIH0gYXMgQWRkV2FycmFudHlQYWdlRGF0YSxcblxuICAgIG9uTG9hZChvcHRpb25zKSB7XG4gICAgICAgIGxldCB3YXJyYW50eUlEID0gb3B0aW9uc1tcImlkXCJdO1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgd2FycmFudHlJRDogd2FycmFudHlJRFxuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgYXN5bmMgb25VbmxvYWQoKSB7XG4gICAgICAgIGF3YWl0IHdhcnJhbnR5U2VydmljZS51cGRhdGVXYXJyYW50eUl0ZW0odGhpcy5kYXRhLndhcnJhbnR5SUQsIHtcbiAgICAgICAgICAgIHBsYXRlOiB0aGlzLmRhdGEucGxhdGVOdW1iZXJcbiAgICAgICAgfSwgIHtcbiAgICAgICAgICAgIGxvbmd0aXR1ZGU6IHBhcnNlRmxvYXQodGhpcy5kYXRhLnNob3BMb2NhdGlvbiEubG9uZ3RpdHVkZSksXG4gICAgICAgICAgICBsYXRpdHVkZTogcGFyc2VGbG9hdCh0aGlzLmRhdGEuc2hvcExvY2F0aW9uIS5sYXRpdHVkZSlcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIG9uRGF0ZUNoYW5nZWQoZTogZXZlbnQuSW5wdXQpIHtcbiAgICAgICAgY29uc29sZS5sb2coZS5kZXRhaWwudmFsdWUpXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICBkYXRlUHVyY2hhc2VkOiBlLmRldGFpbC52YWx1ZVxuICAgICAgICB9KVxuICAgIH0sXG5cbiAgICBvbkdldExvY2F0aW9uKCkge1xuICAgICAgICB3eC5jaG9vc2VMb2NhdGlvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiByZXMgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgICAgIHNob3BBZGRyZXNzOiByZXMuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgc2hvcExvY2F0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYXRpdHVkZTogcmVzLmxhdGl0dWRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9uZ3RpdHVkZTogcmVzLmxvbmdpdHVkZVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzaG9wTmFtZTogcmVzLm5hbWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBlcnIgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfojrflj5blrprkvY3lpLHotKUnLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiAnbm9uZScsXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9LFxuXG4gICAgYXN5bmMgb25TY2FuUGxhdGUoKSB7XG4gICAgICAgIGxldCBpbWdGaWxlID0gYXdhaXQgbmV3IFByb21pc2U8d3guSW1hZ2VGaWxlPigocmVzb2x2ZSxyZWplY3QpPT57XG4gICAgICAgICAgICB3eC5jaG9vc2VJbWFnZSh7XG4gICAgICAgICAgICAgICAgY291bnQ6IDEsXG4gICAgICAgICAgICAgICAgc2l6ZVR5cGU6IFsnY29tcHJlc3NlZCddLFxuICAgICAgICAgICAgICAgIHNvdXJjZVR5cGU6IFsnYWxidW0nLCAnY2FtZXJhJ10sXG4gICAgICAgICAgICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlcy50ZW1wRmlsZXNbMF0pXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICBcbiAgICAgICAgbGV0IHJldCA9IGF3YWl0IHdhcnJhbnR5U2VydmljZS51cGxvYWRQbGF0ZUltYWdlKHRoaXMuZGF0YS53YXJyYW50eUlELCBpbWdGaWxlLnBhdGgpO1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgcGxhdGU6IHJldC5wbGF0ZU51bWJlcixcbiAgICAgICAgICAgIHBsYXRlSW1hZ2VGaWxlSUQ6IHJldC5maWxlSURcbiAgICAgICAgfSk7XG4gICAgfVxufSlcbiJdfQ==