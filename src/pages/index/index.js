"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const app = getApp();
Page({
    onLoad() {
        return __awaiter(this, void 0, void 0, function* () {
            yield app.ensureLogin();
        });
    },
    onGetUserInfo(e) {
        if (e.detail.errMsg != "getUserInfo:ok") {
            wx.showModal({
                title: '先生贵姓？',
                content: '请告诉我您是谁，才能给给您打开个人中心哦',
                showCancel: false,
                success: function (res) {
                    if (res.confirm) {
                        console.log('用户点击确定');
                    }
                }
            });
        }
        else {
            app.globalData.userInfo = e.detail.userInfo;
            wx.navigateTo({ url: "../userConsole/userConsole" });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBR0EsTUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFVLENBQUM7QUFFN0IsSUFBSSxDQUFDO0lBQ0csTUFBTTs7WUFDVixNQUFNLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMxQixDQUFDO0tBQUE7SUFFRCxhQUFhLENBQUMsQ0FBMEI7UUFFdEMsSUFBRyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxnQkFBZ0IsRUFBRTtZQUN0QyxFQUFFLENBQUMsU0FBUyxDQUFDO2dCQUNYLEtBQUssRUFBRSxPQUFPO2dCQUNkLE9BQU8sRUFBRSxzQkFBc0I7Z0JBQy9CLFVBQVUsRUFBRSxLQUFLO2dCQUNqQixPQUFPLEVBQUUsVUFBVSxHQUFHO29CQUNsQixJQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUU7d0JBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQTtxQkFDeEI7Z0JBQ0wsQ0FBQzthQUNGLENBQUMsQ0FBQztTQUNKO2FBQU07WUFDTCxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztZQUM1QyxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUMsR0FBRyxFQUFDLDRCQUE0QixFQUFDLENBQUMsQ0FBQztTQUNuRDtJQUVILENBQUM7Q0FDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTXlBcHAgfSBmcm9tIFwiLi4vLi4vYXBwXCI7XHJcblxyXG5cclxuY29uc3QgYXBwID0gZ2V0QXBwPElNeUFwcD4oKTtcclxuXHJcblBhZ2Uoe1xyXG4gIGFzeW5jIG9uTG9hZCgpIHtcclxuICAgIGF3YWl0IGFwcC5lbnN1cmVMb2dpbigpO1xyXG4gIH0sXHJcblxyXG4gIG9uR2V0VXNlckluZm8oZTogZXZlbnQuQnV0dG9uR2V0VXNlckluZm8pIHtcclxuXHJcbiAgICBpZihlLmRldGFpbC5lcnJNc2cgIT0gXCJnZXRVc2VySW5mbzpva1wiKSB7XHJcbiAgICAgIHd4LnNob3dNb2RhbCh7XHJcbiAgICAgICAgdGl0bGU6ICflhYjnlJ/otLXlp5PvvJ8nLFxyXG4gICAgICAgIGNvbnRlbnQ6ICfor7flkYror4nmiJHmgqjmmK/osIHvvIzmiY3og73nu5nnu5nmgqjmiZPlvIDkuKrkurrkuK3lv4Plk6YnLFxyXG4gICAgICAgIHNob3dDYW5jZWw6IGZhbHNlLFxyXG4gICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgaWYgKHJlcy5jb25maXJtKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn55So5oi354K55Ye756Gu5a6aJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBhcHAuZ2xvYmFsRGF0YS51c2VySW5mbyA9IGUuZGV0YWlsLnVzZXJJbmZvO1xyXG4gICAgICB3eC5uYXZpZ2F0ZVRvKHt1cmw6XCIuLi91c2VyQ29uc29sZS91c2VyQ29uc29sZVwifSk7XHJcbiAgICB9XHJcbiAgICBcclxuICB9XHJcbn0pO1xyXG5cclxuLy8gUGFnZSh7XHJcbi8vICAgZGF0YToge1xyXG4vLyAgIH0sXHJcblxyXG4vLyAgIG9uTG9hZDogZnVuY3Rpb24oKSB7XHJcbiAgICAvLyBpZiAoIXd4LmNsb3VkKSB7XHJcbiAgICAvLyAgIHd4LnJlZGlyZWN0VG8oe1xyXG4gICAgLy8gICAgIHVybDogJy4uL2Nob29zZUxpYi9jaG9vc2VMaWInLFxyXG4gICAgLy8gICB9KVxyXG4gICAgLy8gICByZXR1cm5cclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyDojrflj5bnlKjmiLfkv6Hmga9cclxuICAgIC8vIHd4LmdldFNldHRpbmcoe1xyXG4gICAgLy8gICBzdWNjZXNzOiByZXMgPT4ge1xyXG4gICAgLy8gICAgIGlmIChyZXMuYXV0aFNldHRpbmdbJ3Njb3BlLnVzZXJJbmZvJ10pIHtcclxuICAgIC8vICAgICAgIC8vIOW3sue7j+aOiOadg++8jOWPr+S7peebtOaOpeiwg+eUqCBnZXRVc2VySW5mbyDojrflj5blpLTlg4/mmLXnp7DvvIzkuI3kvJrlvLnmoYZcclxuICAgIC8vICAgICAgIHd4LmdldFVzZXJJbmZvKHtcclxuICAgIC8vICAgICAgICAgc3VjY2VzczogcmVzID0+IHtcclxuICAgIC8vICAgICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgLy8gICAgICAgICAgICAgYXZhdGFyVXJsOiByZXMudXNlckluZm8uYXZhdGFyVXJsLFxyXG4gICAgLy8gICAgICAgICAgICAgdXNlckluZm86IHJlcy51c2VySW5mb1xyXG4gICAgLy8gICAgICAgICAgIH0pXHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICAgIH0pXHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9KVxyXG4gIC8vICAgYXBwLmVuc3VyZUxvZ2luKCk7XHJcbiAgLy8gfSxcclxuXHJcbiAgLy8gb25HZXRVc2VySW5mbzogZnVuY3Rpb24oZSkge1xyXG4gIC8vICAgaWYgKCF0aGlzLmxvZ2dlZCAmJiBlLmRldGFpbC51c2VySW5mbykge1xyXG4gIC8vICAgICB0aGlzLnNldERhdGEoe1xyXG4gIC8vICAgICAgIGxvZ2dlZDogdHJ1ZSxcclxuICAvLyAgICAgICBhdmF0YXJVcmw6IGUuZGV0YWlsLnVzZXJJbmZvLmF2YXRhclVybCxcclxuICAvLyAgICAgICB1c2VySW5mbzogZS5kZXRhaWwudXNlckluZm9cclxuICAvLyAgICAgfSlcclxuICAvLyAgIH1cclxuICAvLyB9LFxyXG5cclxuICAvLyBvbkdldE9wZW5pZDogZnVuY3Rpb24oKSB7XHJcbiAgLy8gICAvLyDosIPnlKjkupHlh73mlbBcclxuICAvLyAgIHd4LmNsb3VkLmNhbGxGdW5jdGlvbih7XHJcbiAgLy8gICAgIG5hbWU6ICdsb2dpbicsXHJcbiAgLy8gICAgIGRhdGE6IHt9LFxyXG4gIC8vICAgICBzdWNjZXNzOiByZXMgPT4ge1xyXG4gIC8vICAgICAgIGNvbnNvbGUubG9nKCdb5LqR5Ye95pWwXSBbbG9naW5dIHVzZXIgb3BlbmlkOiAnLCByZXMucmVzdWx0Lm9wZW5pZClcclxuICAvLyAgICAgICBhcHAuZ2xvYmFsRGF0YS5vcGVuaWQgPSByZXMucmVzdWx0Lm9wZW5pZFxyXG4gIC8vICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xyXG4gIC8vICAgICAgICAgdXJsOiAnLi4vdXNlckNvbnNvbGUvdXNlckNvbnNvbGUnLFxyXG4gIC8vICAgICAgIH0pXHJcbiAgLy8gICAgIH0sXHJcbiAgLy8gICAgIGZhaWw6IGVyciA9PiB7XHJcbiAgLy8gICAgICAgY29uc29sZS5lcnJvcignW+S6keWHveaVsF0gW2xvZ2luXSDosIPnlKjlpLHotKUnLCBlcnIpXHJcbiAgLy8gICAgICAgd3gubmF2aWdhdGVUbyh7XHJcbiAgLy8gICAgICAgICB1cmw6ICcuLi9kZXBsb3lGdW5jdGlvbnMvZGVwbG95RnVuY3Rpb25zJyxcclxuICAvLyAgICAgICB9KVxyXG4gIC8vICAgICB9XHJcbiAgLy8gICB9KVxyXG4gIC8vIH0sXHJcblxyXG4gIC8vIC8vIOS4iuS8oOWbvueJh1xyXG4gIC8vIGRvVXBsb2FkOiBmdW5jdGlvbiAoKSB7XHJcbiAgLy8gICAvLyDpgInmi6nlm77niYdcclxuICAvLyAgIHd4LmNob29zZUltYWdlKHtcclxuICAvLyAgICAgY291bnQ6IDEsXHJcbiAgLy8gICAgIHNpemVUeXBlOiBbJ2NvbXByZXNzZWQnXSxcclxuICAvLyAgICAgc291cmNlVHlwZTogWydhbGJ1bScsICdjYW1lcmEnXSxcclxuICAvLyAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xyXG5cclxuICAvLyAgICAgICB3eC5zaG93TG9hZGluZyh7XHJcbiAgLy8gICAgICAgICB0aXRsZTogJ+S4iuS8oOS4rScsXHJcbiAgLy8gICAgICAgfSlcclxuXHJcbiAgLy8gICAgICAgY29uc3QgZmlsZVBhdGggPSByZXMudGVtcEZpbGVQYXRoc1swXVxyXG4gICAgICAgIFxyXG4gIC8vICAgICAgIC8vIOS4iuS8oOWbvueJh1xyXG4gIC8vICAgICAgIGNvbnN0IGNsb3VkUGF0aCA9ICdteS1pbWFnZScgKyBmaWxlUGF0aC5tYXRjaCgvXFwuW14uXSs/JC8pWzBdXHJcbiAgLy8gICAgICAgd3guY2xvdWQudXBsb2FkRmlsZSh7XHJcbiAgLy8gICAgICAgICBjbG91ZFBhdGgsXHJcbiAgLy8gICAgICAgICBmaWxlUGF0aCxcclxuICAvLyAgICAgICAgIHN1Y2Nlc3M6IHJlcyA9PiB7XHJcbiAgLy8gICAgICAgICAgIGNvbnNvbGUubG9nKCdb5LiK5Lyg5paH5Lu2XSDmiJDlip/vvJonLCByZXMpXHJcblxyXG4gIC8vICAgICAgICAgICBhcHAuZ2xvYmFsRGF0YS5maWxlSUQgPSByZXMuZmlsZUlEXHJcbiAgLy8gICAgICAgICAgIGFwcC5nbG9iYWxEYXRhLmNsb3VkUGF0aCA9IGNsb3VkUGF0aFxyXG4gIC8vICAgICAgICAgICBhcHAuZ2xvYmFsRGF0YS5pbWFnZVBhdGggPSBmaWxlUGF0aFxyXG4gICAgICAgICAgICBcclxuICAvLyAgICAgICAgICAgd3gubmF2aWdhdGVUbyh7XHJcbiAgLy8gICAgICAgICAgICAgdXJsOiAnLi4vc3RvcmFnZUNvbnNvbGUvc3RvcmFnZUNvbnNvbGUnXHJcbiAgLy8gICAgICAgICAgIH0pXHJcbiAgLy8gICAgICAgICB9LFxyXG4gIC8vICAgICAgICAgZmFpbDogZSA9PiB7XHJcbiAgLy8gICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1vkuIrkvKDmlofku7ZdIOWksei0pe+8micsIGUpXHJcbiAgLy8gICAgICAgICAgIHd4LnNob3dUb2FzdCh7XHJcbiAgLy8gICAgICAgICAgICAgaWNvbjogJ25vbmUnLFxyXG4gIC8vICAgICAgICAgICAgIHRpdGxlOiAn5LiK5Lyg5aSx6LSlJyxcclxuICAvLyAgICAgICAgICAgfSlcclxuICAvLyAgICAgICAgIH0sXHJcbiAgLy8gICAgICAgICBjb21wbGV0ZTogKCkgPT4ge1xyXG4gIC8vICAgICAgICAgICB3eC5oaWRlTG9hZGluZygpXHJcbiAgLy8gICAgICAgICB9XHJcbiAgLy8gICAgICAgfSlcclxuXHJcbiAgLy8gICAgIH0sXHJcbiAgLy8gICAgIGZhaWw6IGUgPT4ge1xyXG4gIC8vICAgICAgIGNvbnNvbGUuZXJyb3IoZSlcclxuICAvLyAgICAgfVxyXG4gIC8vICAgfSlcclxuICAvLyB9LFxyXG5cclxuLy8gfSlcclxuIl19